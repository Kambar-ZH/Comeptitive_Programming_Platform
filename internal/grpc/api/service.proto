syntax = "proto3";

option go_package = "example/api";
package api;

service SubmissionRepository {
  rpc All(AllSubmissionsRequest) returns (SubmissionList);
  rpc ById(SubmissionByIdRequest) returns (Submission);
  rpc ByAuthorHandle(SubmissionByHandleRequest) returns (Submission);
  rpc Create(Submission) returns (Submission);
  rpc Update(Submission) returns (Submission);
  rpc Delete(DeleteSubmissionRequest) returns (Empty);
}

message AllSubmissionsRequest {
  int32 page = 1;
  int32 limit = 2;
}

message SubmissionByIdRequest {
  int32 id = 1; 
}

message SubmissionByHandleRequest {
  string handle = 1;
}

message DeleteSubmissionRequest {
  int32 id = 1;
  int32 contestId = 2;
}

service RegistrationService {
  rpc Validate(User) returns (Empty);
  rpc Sanitize(User) returns (Empty);
  rpc ComparePassword(User) returns (ComparePasswordResponse);
  rpc BeforeCreate(User) returns (Empty);
  rpc EncryptPassword(EncryptPasswordRequest) returns (EncryptPasswordResponse);
}

message EncryptPasswordRequest {
  string unencryptedPassword = 1;
}

message EncryptPasswordResponse {
  string password = 1;
}

message ComparePasswordResponse {
  bool isEqual = 1;
}

message Empty {}


service UserRepository {
  rpc All(AllUserRequest) returns (UserList);
  rpc ByEmail(UserByEmailRequest) returns (User);
  rpc ByHandle(UserByHandleRequest) returns(User);
  rpc Create(User) returns (User);
  rpc Update(User) returns (User);
  rpc Delete(DeleteUserRequest) returns (Empty);
}

message UserList {
  repeated User users = 1;
}

message UserByEmailRequest {
  string email = 1;
}

message UserByHandleRequest {
  string handle = 1;
}

message AllUserRequest {
  int32 page = 1;
  int32 limit = 2;
}

message DeleteUserRequest {
  string handle = 1;
}

message User {
  string handle = 1;
  string email = 2;
  string country = 3;
  string city = 4;
  int32 rating = 5;
  int32 maxRating = 6;
  string avatar = 7;
  string password = 8;
  string encryptedPassword = 9;
}

message SubmissionList {
  repeated Submission submissions = 1;
}

message Submission {  
  int32 id = 1;
  int32 contestId = 2;
  string date = 3;
  string authorHandle = 4;
  int32 problemId = 5;
  int32 verdict = 6;
  int32 failedTest = 7;
}